{"ast":null,"code":"import _classCallCheck from \"/Users/mrapple/Documents/BootCampGits/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mrapple/Documents/BootCampGits/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mrapple/Documents/BootCampGits/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mrapple/Documents/BootCampGits/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mrapple/Documents/BootCampGits/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mrapple/Documents/BootCampGits/clicky-game/src/components/mainContainer/index.js\";\nimport React, { Component } from 'react';\nimport Container from '../container';\nimport NavBar from '../navbar';\nimport Header from '../header';\nimport Footer from '../footer';\n\nvar MainContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainContainer, _Component);\n\n  function MainContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      score: 0,\n      topScore: 0,\n      msg: {\n        txt: \"Play\",\n        class: \"Normal\"\n      },\n      items: {},\n      images: [{\n        src: '/assets/images/1.jpeg',\n        name: '1'\n      }, {\n        src: '/assets/images/2.jpeg',\n        name: '2'\n      }, {\n        src: '/assets/images/3.jpeg',\n        name: '3'\n      }, {\n        src: '/assets/images/4.jpeg',\n        name: '4'\n      }, {\n        src: '/assets/images/5.jpeg',\n        name: '5'\n      }, {\n        src: '/assets/images/6.jpeg',\n        name: '6'\n      }, {\n        src: '/assets/images/7.jpeg',\n        name: '7'\n      }, {\n        src: '/assets/images/8.jpeg',\n        name: '8'\n      }, {\n        src: '/assets/images/9.jpeg',\n        name: '9'\n      }, {\n        src: '/assets/images/10.jpeg',\n        name: '10'\n      }, {\n        src: '/assets/images/11.jpeg',\n        name: '11'\n      }, {\n        src: '/assets/images/12.jpeg',\n        name: '12'\n      }]\n    };\n\n    _this.re_sort_images = function (arr) {\n      var n = arr.length;\n      var tempArr = [];\n\n      for (var i = 0; i < n - 1; i++) {\n        tempArr.push(arr.splice(Math.floor(Math.random() * arr.length), 1)[0]);\n      }\n\n      tempArr.push(arr[0]);\n      arr = tempArr;\n      return arr;\n    };\n\n    _this.handleClickEvent = function (query) {\n      var items = _this.state.items;\n\n      if (_this.state.items[query]) {\n        _this.setState({\n          msg: {\n            txt: \"You guessed incorrectly\",\n            class: \"black\"\n          },\n          score: 0,\n          items: {},\n          images: _this.re_sort_images(_this.state.images)\n        });\n\n        return;\n      }\n\n      items[query] = 1;\n\n      _this.setState({\n        score: _this.state.score + 1,\n        topScore: _this.state.topScore + 1,\n        msg: {\n          txt: \"you guessed correctly\",\n          class: \"green\"\n        },\n        items: items,\n        images: _this.re_sort_images(_this.state.images)\n      });\n\n      if (_this.state.score === 12) {\n        _this.setState({\n          msg: {\n            txt: \"You Won\",\n            class: \"green\"\n          },\n          score: 0,\n          topScore: 0,\n          items: {},\n          images: _this.re_sort_images(_this.state.images)\n        });\n      }\n\n      if (_this.state.topScore === 12) {\n        _this.setState({\n          msg: {\n            txt: \"Play\",\n            class: \"Normal\"\n          },\n          score: 0,\n          topScore: 0,\n          items: {},\n          images: _this.re_sort_images(_this.state.images)\n        });\n\n        return;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MainContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        msg: this.state.msg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"main\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.images.map(function (image) {\n        return React.createElement(Container, {\n          src: image.src,\n          name: image.name,\n          key: image.id,\n          handleClickEvent: _this2.handleClickEvent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      })), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MainContainer;\n}(Component);\n\nexport default MainContainer;","map":{"version":3,"sources":["/Users/mrapple/Documents/BootCampGits/clicky-game/src/components/mainContainer/index.js"],"names":["React","Component","Container","NavBar","Header","Footer","MainContainer","state","score","topScore","msg","txt","class","items","images","src","name","re_sort_images","arr","n","length","tempArr","i","push","splice","Math","floor","random","handleClickEvent","query","setState","map","image","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Container from '../container';\nimport NavBar from '../navbar';\nimport Header from '../header';\nimport Footer from '../footer';\n\nclass MainContainer extends Component {\n    state = {\n        score: 0,\n        topScore: 0,\n        msg:{ txt: \"Play\",class:\"Normal\"},\n        items: {},\n        images: [\n            {src:'/assets/images/1.jpeg',name:'1'},\n            {src:'/assets/images/2.jpeg',name:'2'},\n            {src:'/assets/images/3.jpeg',name:'3'},\n            {src:'/assets/images/4.jpeg',name:'4'},\n            {src:'/assets/images/5.jpeg',name:'5'},\n            {src:'/assets/images/6.jpeg',name:'6'},\n            {src:'/assets/images/7.jpeg',name:'7'},\n            {src:'/assets/images/8.jpeg',name:'8'},\n            {src:'/assets/images/9.jpeg',name:'9'},\n            {src:'/assets/images/10.jpeg',name:'10'},\n            {src:'/assets/images/11.jpeg',name:'11'},\n            {src:'/assets/images/12.jpeg',name:'12'}\n        ]\n    }\n    re_sort_images = arr => {\n        var n = arr.length;\n        var tempArr = [];\n        for ( var i = 0; i < n-1; i++ ) {\n            tempArr.push(arr.splice(Math.floor(Math.random()*arr.length),1)[0]);\n        }\n        tempArr.push(arr[0]);\n        arr = tempArr;\n        return arr;\n    }\n    handleClickEvent = query =>{\n        let items = this.state.items;\n        if (this.state.items[query]) {\n            this.setState({\n                msg: {txt: \"You guessed incorrectly\",class:\"black\" },\n                score: 0,\n                items: {},\n                images: this.re_sort_images(this.state.images)\n            });\n            return;\n        }\n\n        items[query] = 1;\n        this.setState({\n            score: this.state.score + 1,\n            topScore: this.state.topScore + 1,\n            msg: {txt: \"you guessed correctly\",class:\"green\" },\n            items: items,\n            images:this.re_sort_images(this.state.images)\n        });\n        if (this.state.score === 12) {\n            this.setState({\n                msg: {txt: \"You Won\",class:\"green\" },\n                score: 0,\n                topScore:0,\n                items: {},\n                images: this.re_sort_images(this.state.images)\n            });\n        }\n        if (this.state.topScore === 12) {\n            this.setState({\n                msg: {txt: \"Play\",class:\"Normal\" },\n                score: 0,\n                topScore:0,\n                items: {},\n                images: this.re_sort_images(this.state.images)\n            });\n            \n            return;\n        }\n    }\n    render() {\n        return (\n            <div>\n                <NavBar\n                    score={this.state.score}\n                    topScore={this.state.topScore}\n                    msg={this.state.msg}\n                />\n                <Header />\n                <main className=\"container\">\n                    {\n                        this.state.images.map(image => (\n                            <Container\n                                src={image.src}\n                                name={image.name}\n                                key = {image.id}\n                                handleClickEvent = { this.handleClickEvent }\n                            />\n                          ))\n                     }\n                </main>\n                <Footer/>\n            </div>\n        )\n    }\n}\nexport default MainContainer;"]},"metadata":{},"sourceType":"module"}